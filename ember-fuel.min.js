!function(){var FuelVersion="0.5.5-beta1";window.Fuel=Ember.Fuel=Ember.Namespace.create({VERSION:FuelVersion}),Ember.libraries.registerCoreLibrary("Ember Fuel",Ember.Fuel.VERSION)}(),function(){Ember.Crud=Ember.Fuel.Crud=Ember.Namespace.create({Route:{}}),Ember.Fuel.Crud.DefaultConfig=Ember.Mixin.create({efcConfig:{model:null,returnRoute:"index",callbacks:{success:function(){},error:function(){},cancel:function(){},confirmDelete:function(){return!0},confirmCancel:function(){return!0}}}}),Ember.Fuel.Crud.Mixin=Ember.Mixin.create({setupController:function(Controller,Model){Controller.set("model",Model),Controller.set("efcConfig",this.get("efcConfig")),Controller.set("isEditingRecord",!1)},efcGetModel:function(calledAction){var Model=this.modelFor(this.routeName);return Model?Model:void this.efcError.bind(this,calledAction,'Could not get model for "'+this.routeName+'"')},efcGetConfig:function(params){return this.get("efcConfig."+params)},efcCallCallback:function(callbackName){var Args=Array.prototype.slice.call(arguments);Args.shift();var CallBack=this.efcGetConfig("callbacks."+callbackName);return CallBack&&"function"==typeof CallBack?CallBack.apply(this,Args):!0},efcRouteReturn:function(){var CallBack=this.efcGetConfig("returnRoute");this.transitionTo(CallBack?CallBack:"index")},efcError:function(calledAction,errorMsg){var Result=this.efcCallCallback("error",calledAction,responseObj.status,JSON.parse(responseObj.responseText));Result&&this.efcRouteReturn()},efcSuccess:function(calledAction){this.efcCallCallback("success"),"delete"!==calledAction&&this.efcRouteReturn()},actions:{willTransition:function(){var Model=this.efcGetModel();Model.get("isDirty")&&this.send("efcCancel")},efcCancel:function(){var Model=this.efcGetModel("cancel"),Result=this.efcCallCallback("confirmCancel");Result&&(Model.rollback(),this.efcCallCallback("cancel"),this.efcRouteReturn())},efcCopy:function(){throw"CRUD 'Copy' not implemented yet!"},efcDelete:function(Model){var Result=this.efcCallCallback("confirmDelete");Result&&Model.destroyRecord().then(this.efcSuccess.bind(this,"delete"),this.efcError.bind(this,"delete"))},efcPublish:function(){throw"CRUD 'Publish' not implemented yet!"},efcSave:function(){var Model=this.efcGetModel("save");Model.save().then(this.efcSuccess.bind(this,"save"),this.efcError.bind(this,"save"))},efcSoftDelete:function(){throw"CRUD 'Soft Delete' not implemented yet!"},efcUnpublish:function(){throw"CRUD 'Unpublish' not implemented yet!"}}}),Ember.Fuel.Crud.Route.List=Ember.Route.extend(Ember.Fuel.Crud.Mixin,Ember.Fuel.Crud.DefaultConfig,{model:function(){var Model=this.efcGetConfig("model");return Model?this.store.find(Model):this._super()}}),Ember.Fuel.Crud.Route.New=Ember.Route.extend(Ember.Fuel.Crud.Mixin,Ember.Fuel.Crud.DefaultConfig,{model:function(){var Model=this.efcGetConfig("model");return Model?this.store.createRecord(Model):this._super()}}),Ember.Fuel.Crud.Route.Edit=Ember.Route.extend(Ember.Fuel.Crud.Mixin,Ember.Fuel.Crud.DefaultConfig,{setupController:function(Controller,Model){this._super(Controller,Model),Controller.set("isEditingRecord",!0)},model:function(params){var Model=this.efcGetConfig("model");return Model?this.store.find(Model,params.id):this._super()}}),Ember.Fuel.Crud.Route.View=Ember.Route.extend(Ember.Fuel.Crud.Mixin,Ember.Fuel.Crud.DefaultConfig,{model:function(params){var Model=this.efcGetConfig("model");return Model?this.store.find(Model,params.id):this._super()}})}(),function(){window.FlashMessages=Ember.Fuel.FlashMessages=Ember.Namespace.create({VERSION:Ember.Fuel.VERSION,Mixin:{},Controller:{}}),Ember.libraries.registerCoreLibrary(" - FlashMessages",Ember.Fuel.FlashMessages.VERSION)}(),function(){Ember.Fuel.FlashMessages.Mixin.Route=Ember.Mixin.create({flashMessage:function(message){var controller=this.controllerFor("flashMessage");return controller.set("queuedMessage",message),controller}})}(),function(){Ember.Application.initializer({name:"flashMessage",initialize:function(container){container.register("controller:flashMessage",Ember.Fuel.FlashMessages.Controller)}})}(),function(){Ember.Fuel.FlashMessages.Controller=Ember.Controller.extend({queuedMessage:null,currentMessage:null,message:Ember.computed.alias("currentMessage"),now:function(){this.setProperties({queuedMessage:null,currentMessage:this.get("queuedMessage")})}})}(),function(){Ember.Handlebars.registerHelper("flashMessage",function(options){var template=options.fn,container=options.data.keywords.controller.container,controller=container.lookup("controller:flashMessage"),parent=Ember.ContainerView.extend({hideAndShowMessage:function(){var view,currentMessage=this.get("controller.currentMessage");currentMessage&&(view=Ember.View.create({template:template})),this.set("currentView",view)}.observes("controller.currentMessage")});options.hash.controller=controller,options.hashTypes=options.hashTypes||{},Ember.Handlebars.helpers.view.call(this,parent,options)})}(),function(){Ember.Route.reopen(Ember.Fuel.FlashMessages.Mixin.Route,{activate:function(){this._super.apply(this,arguments);var controller=this.controllerFor("flashMessage"),routeName=this.get("routeName");"loading"!==routeName&&controller.now()}})}(),function(){window.Bootstrap=Ember.Bootstrap=Ember.Fuel.Bootstrap=Ember.Namespace.create({}),Ember.Fuel.Bootstrap.AlertMessage=Ember.View.extend({classNames:["alert","alert-message"],template:Ember.Handlebars.compile('<a class="close" rel="close" href="#">&times;</a>{{{view.message}}}'),message:null,removeAfter:null,didInsertElement:function(){var removeAfter=get(this,"removeAfter");removeAfter>0&&Ember.run.later(this,"destroy",removeAfter)},click:function(event){var target=event.target,targetRel=target.getAttribute("rel");return"close"===targetRel?(this.destroy(),!1):void 0}})}();
//# sourceMappingURL=ember-fuel.map.js